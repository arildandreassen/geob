AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  geob-backend
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    Runtime: nodejs16.x
    Environment: 
      Variables:
        databaseString: !Ref DatabaseConnectionString
    Architectures:
      - x86_64
    VpcConfig:
      SecurityGroupIds:
        - sg-052c8edab616490a8
      SubnetIds: 
        - subnet-0f21e46c03afd4044
        - subnet-0b52a6714fd3fd247

Parameters:
  DatabaseConnectionString:
    Type: String
    Default: postgresql://postgres:password@host.docker.internal:5432/postgres

Resources:
  GeobApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev
      Cors: 
        AllowMethods: "'POST, GET'"
        AllowHeaders: "'content-type'"
        AllowOrigin: "'*'"

  ListCountriesFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: ListCountries
      CodeUri: lambdas/listCountries/
      Handler: app.lambdaHandler
      Events:
        ListCountries:
          Type: Api
          Properties:
            RestApiId: !Ref GeobApi
            Path: /countries
            Method: GET
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        # Sourcemap: true # Enabling source maps will create the required NODE_OPTIONS environment variables on your lambda function during sam build
        EntryPoints: 
        - app.ts
        External:
        - better-sqlite3
        - mysql2
        - pg-query-stream
        - oracledb
        - sqlite3
        - tedious
        - mysql
        - pg-native

  GetCountryFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: GetCountry
      CodeUri: lambdas/getCountry/
      Handler: app.lambdaHandler
      Events:
        GetCountry:
          Type: Api
          Properties:
            RestApiId: !Ref GeobApi
            Path: /countries/{countryId}
            Method: GET
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        # Sourcemap: true # Enabling source maps will create the required NODE_OPTIONS environment variables on your lambda function during sam build
        EntryPoints: 
        - app.ts
        External:
        - better-sqlite3
        - mysql2
        - pg-query-stream
        - oracledb
        - sqlite3
        - tedious
        - mysql
        - pg-native

  ListHighScoresFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: ListHighScores
      CodeUri: lambdas/listHighScores/
      Handler: app.lambdaHandler
      Events:
        ListHighScores:
          Type: Api
          Properties:
            RestApiId: !Ref GeobApi
            Path: /highscores
            Method: GET
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        # Sourcemap: true # Enabling source maps will create the required NODE_OPTIONS environment variables on your lambda function during sam build
        EntryPoints: 
        - app.ts
        External:
        - better-sqlite3
        - mysql2
        - pg-query-stream
        - oracledb
        - sqlite3
        - tedious
        - mysql
        - pg-native

  AddHighScoreFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: AddHighScore
      CodeUri: lambdas/addHighScores/
      Handler: app.lambdaHandler
      Events:
        AddHighScore:
          Type: Api
          Properties:
            RestApiId: !Ref GeobApi
            Path: /highscores
            Method: POST
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        # Sourcemap: true # Enabling source maps will create the required NODE_OPTIONS environment variables on your lambda function during sam build
        EntryPoints: 
        - app.ts
        External:
        - better-sqlite3
        - mysql2
        - pg-query-stream
        - oracledb
        - sqlite3
        - tedious
        - mysql
        - pg-native


